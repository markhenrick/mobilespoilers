/*
 * This file is generated by jOOQ.
 */
package site.markhenrick.mobilespoilers.dal.jooqgenerated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import site.markhenrick.mobilespoilers.dal.jooqgenerated.tables.Spoilers;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Spoiler extends UpdatableRecordImpl<Spoiler> implements Record3<String, String, String> {

    private static final long serialVersionUID = -60041987;

    /**
     * Setter for <code>spoilers.message_id</code>.
     */
    public void setMessageId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>spoilers.message_id</code>.
     */
    public String getMessageId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spoilers.channel_id</code>.
     */
    public void setChannelId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>spoilers.channel_id</code>.
     */
    public String getChannelId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spoilers.user_id</code>.
     */
    public void setUserId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>spoilers.user_id</code>.
     */
    public String getUserId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Spoilers.SPOILERS.MESSAGE_ID;
    }

    @Override
    public Field<String> field2() {
        return Spoilers.SPOILERS.CHANNEL_ID;
    }

    @Override
    public Field<String> field3() {
        return Spoilers.SPOILERS.USER_ID;
    }

    @Override
    public String component1() {
        return getMessageId();
    }

    @Override
    public String component2() {
        return getChannelId();
    }

    @Override
    public String component3() {
        return getUserId();
    }

    @Override
    public String value1() {
        return getMessageId();
    }

    @Override
    public String value2() {
        return getChannelId();
    }

    @Override
    public String value3() {
        return getUserId();
    }

    @Override
    public Spoiler value1(String value) {
        setMessageId(value);
        return this;
    }

    @Override
    public Spoiler value2(String value) {
        setChannelId(value);
        return this;
    }

    @Override
    public Spoiler value3(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public Spoiler values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpoilersRecord
     */
    public Spoiler() {
        super(Spoilers.SPOILERS);
    }

    /**
     * Create a detached, initialised SpoilersRecord
     */
    public Spoiler(String messageId, String channelId, String userId) {
        super(Spoilers.SPOILERS);

        set(0, messageId);
        set(1, channelId);
        set(2, userId);
    }
}
